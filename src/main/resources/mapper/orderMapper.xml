<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shan.reservation.mapper.orderMapper" >
  <resultMap id="BaseResultMap" type="com.shan.reservation.bean.order" >
    <constructor >
      <idArg column="orderId" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="userId" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="restaurantId" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="price" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="isPay" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="isAppraise" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="isRefund" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="deliverMoney" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="createTime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="deliveryTime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="receiveTime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="state" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="orderRemarks" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    orderId, userId, restaurantId, price, isPay, isAppraise, isRefund, deliverMoney, 
    createTime, deliveryTime, receiveTime, state, orderRemarks
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shan.reservation.bean.orderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from order
    where orderId = #{orderid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from order
    where orderId = #{orderid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.shan.reservation.bean.orderExample" >
    delete from order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shan.reservation.bean.order" >
    insert into order (orderId, userId, restaurantId, 
      price, isPay, isAppraise, 
      isRefund, deliverMoney, createTime, 
      deliveryTime, receiveTime, state, 
      orderRemarks)
    values (#{orderid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{restaurantid,jdbcType=INTEGER}, 
      #{price,jdbcType=DECIMAL}, #{ispay,jdbcType=TINYINT}, #{isappraise,jdbcType=TINYINT}, 
      #{isrefund,jdbcType=TINYINT}, #{delivermoney,jdbcType=DECIMAL}, #{createtime,jdbcType=TIMESTAMP}, 
      #{deliverytime,jdbcType=TIMESTAMP}, #{receivetime,jdbcType=TIMESTAMP}, #{state,jdbcType=TINYINT}, 
      #{orderremarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.shan.reservation.bean.order" >
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderid != null" >
        orderId,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="restaurantid != null" >
        restaurantId,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="ispay != null" >
        isPay,
      </if>
      <if test="isappraise != null" >
        isAppraise,
      </if>
      <if test="isrefund != null" >
        isRefund,
      </if>
      <if test="delivermoney != null" >
        deliverMoney,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="deliverytime != null" >
        deliveryTime,
      </if>
      <if test="receivetime != null" >
        receiveTime,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="orderremarks != null" >
        orderRemarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderid != null" >
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="restaurantid != null" >
        #{restaurantid,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="ispay != null" >
        #{ispay,jdbcType=TINYINT},
      </if>
      <if test="isappraise != null" >
        #{isappraise,jdbcType=TINYINT},
      </if>
      <if test="isrefund != null" >
        #{isrefund,jdbcType=TINYINT},
      </if>
      <if test="delivermoney != null" >
        #{delivermoney,jdbcType=DECIMAL},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="deliverytime != null" >
        #{deliverytime,jdbcType=TIMESTAMP},
      </if>
      <if test="receivetime != null" >
        #{receivetime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="orderremarks != null" >
        #{orderremarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shan.reservation.bean.orderExample" resultType="java.lang.Integer" >
    select count(*) from order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update order
    <set >
      <if test="record.orderid != null" >
        orderId = #{record.orderid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.restaurantid != null" >
        restaurantId = #{record.restaurantid,jdbcType=INTEGER},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.ispay != null" >
        isPay = #{record.ispay,jdbcType=TINYINT},
      </if>
      <if test="record.isappraise != null" >
        isAppraise = #{record.isappraise,jdbcType=TINYINT},
      </if>
      <if test="record.isrefund != null" >
        isRefund = #{record.isrefund,jdbcType=TINYINT},
      </if>
      <if test="record.delivermoney != null" >
        deliverMoney = #{record.delivermoney,jdbcType=DECIMAL},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deliverytime != null" >
        deliveryTime = #{record.deliverytime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.receivetime != null" >
        receiveTime = #{record.receivetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.orderremarks != null" >
        orderRemarks = #{record.orderremarks,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update order
    set orderId = #{record.orderid,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      restaurantId = #{record.restaurantid,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DECIMAL},
      isPay = #{record.ispay,jdbcType=TINYINT},
      isAppraise = #{record.isappraise,jdbcType=TINYINT},
      isRefund = #{record.isrefund,jdbcType=TINYINT},
      deliverMoney = #{record.delivermoney,jdbcType=DECIMAL},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      deliveryTime = #{record.deliverytime,jdbcType=TIMESTAMP},
      receiveTime = #{record.receivetime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=TINYINT},
      orderRemarks = #{record.orderremarks,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shan.reservation.bean.order" >
    update order
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="restaurantid != null" >
        restaurantId = #{restaurantid,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="ispay != null" >
        isPay = #{ispay,jdbcType=TINYINT},
      </if>
      <if test="isappraise != null" >
        isAppraise = #{isappraise,jdbcType=TINYINT},
      </if>
      <if test="isrefund != null" >
        isRefund = #{isrefund,jdbcType=TINYINT},
      </if>
      <if test="delivermoney != null" >
        deliverMoney = #{delivermoney,jdbcType=DECIMAL},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="deliverytime != null" >
        deliveryTime = #{deliverytime,jdbcType=TIMESTAMP},
      </if>
      <if test="receivetime != null" >
        receiveTime = #{receivetime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="orderremarks != null" >
        orderRemarks = #{orderremarks,jdbcType=VARCHAR},
      </if>
    </set>
    where orderId = #{orderid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shan.reservation.bean.order" >
    update order
    set userId = #{userid,jdbcType=INTEGER},
      restaurantId = #{restaurantid,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      isPay = #{ispay,jdbcType=TINYINT},
      isAppraise = #{isappraise,jdbcType=TINYINT},
      isRefund = #{isrefund,jdbcType=TINYINT},
      deliverMoney = #{delivermoney,jdbcType=DECIMAL},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      deliveryTime = #{deliverytime,jdbcType=TIMESTAMP},
      receiveTime = #{receivetime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=TINYINT},
      orderRemarks = #{orderremarks,jdbcType=VARCHAR}
    where orderId = #{orderid,jdbcType=INTEGER}
  </update>
</mapper>