<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shan.reservation.mapper.collectUtilMapper" >
    <resultMap id="BaseResultMap" type="com.shan.reservation.bean.collect" >
        <constructor >
            <idArg column="collecte_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
            <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
            <arg column="restaurant_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
            <arg column="food_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
        </constructor>
    </resultMap>
    <select id="selectByUser" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
      select * from collect where user_id= #{userId,jdbcType=INTEGER}
    </select>

    <select id="selectByUserAndRe" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
       select * from collect where user_id= #{userId,jdbcType=INTEGER} And restaurant_id= #{restaurantId,jdbcType=INTEGER}
    </select>
    <delete id="deleteCollect" parameterType="com.shan.reservation.bean.orderExample" >
        DELETE FROM collect WHERE user_id= #{userId,jdbcType=INTEGER} And restaurant_id= #{restaurantId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.shan.reservation.bean.collect" >
    insert into collect (user_id, restaurant_id )
    values (#{userId,jdbcType=INTEGER}, #{restaurantId,jdbcType=INTEGER})
  </insert>
</mapper>